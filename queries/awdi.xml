<motif name="abstraction without decoupling - but accept services implemented an client inner classes">
    <select role="client">
    	<constraint>!client.abstract</constraint>
    </select>
    <select role="service">
   		<constraint>service.abstract</constraint>
    </select>
    <select role="service_impl">
    	<constraint>!service_impl.abstract</constraint>
    </select>
    <constraint>!service_impl.isPartOf(client)</constraint>
    <connectedBy role="inherits" from="service_impl" to="service">
    	<constraint>inherits.type=='extends' || inherits.type=='implements'</constraint>
    </connectedBy>
    <connectedBy role="service_invocation" from="client" to="service" minLength="1" maxLength="1">
    	<constraint>service_invocation.type=='uses'</constraint>    
    </connectedBy>
    <connectedBy role="implementation_dependency" from="client" to="service_impl">
		<constraint>implementation_dependency.type=='uses'</constraint>    
	</connectedBy>
    <groupBy>
        <element>client</element>
        <element>service</element>
    </groupBy>
</motif>